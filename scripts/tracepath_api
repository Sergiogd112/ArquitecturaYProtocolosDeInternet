#!/bin/bash

function print_summary() {
    echo "*** PATH SUMMARY ***"
    echo "$1"
    exit 0
}

DESTINATION_ADDRESS=$2

# Create a map key-->IP value-->Router from lxc-ls
lxc_list=$(lxc-ls -f | grep RUNNING | awk '{$2=$3=""; print $0}' | awk -F '[-|-]' '{printf "%s %s\n",$1,$2}' | sed 's/,//g')
declare -A address_router_map
while IFS= read -r line; do
    router=$(awk '{print $1}' < <(echo $line))
    line=${line//$router/} #FOO=${FOO//$WORDTOREMOVE/}
    IFS=' '
    for word in $line; do
        address_router_map[$word]=$router
    done
done < <(printf '%s\n' "$lxc_list")

# for x in "${!address_router_map[@]}"; do printf "[%s]=%s\n" "$x" "${address_router_map[$x]}" ; done

ROUTER=$1
printf "%s\n" $ROUTER
SUMMARY=$SUMMARY$ROUTER
printf "%4cMatching FIB entries:\n" " "
fib_entries=$(lxc-attach -n $ROUTER -- ip route list match $DESTINATION_ADDRESS)
get_next_hop=$(lxc-attach -n $ROUTER -- ip route get $DESTINATION_ADDRESS | sed '$ d')
dc=$(awk '{print $1}' < <(echo $get_next_hop))
if [ ! "$dc" == "local" ]; then
    sp=$(awk '{print $2}' < <(echo $get_next_hop))
    if [ $sp == "via" ]; then
        awk '{printf "%8c%s\t%s\t%s\n"," ",$1,$3,$5}' < <(echo $fib_entries)
        nh=$(awk '{print $3}' < <(echo $get_next_hop))
    else
        awk '{printf "%8c%s\t0.0.0.0\tdirectly connected\n"," ",$1}' < <(echo $fib_entries)
        nh="0.0.0.0"
    fi
else
    awk '{printf "%8c%s\t0.0.0.0\tdirectly connected\n"," ",$1}' < <(echo $fib_entries)
    nh="0.0.0.0"
fi
#awk '{printf "%8c%s\t%s\t%s\n"," ",$1,$3,$5}'< <(echo $fib_entries)
#nh=$(awk '{print $3}' < <(echo $get_next_hop))
printf "\n%4cNext Hop: %s\n\n" " " $nh

if [ "$nh" == "0.0.0.0" ]; then
    print_summary $SUMMARY" --> "$DESTINATION_ADDRESS" (Destination Address)"
fi

jump=false
while [ "$jump" = false ]; do
    ROUTER=${address_router_map[$nh]}
    SUMMARY=$SUMMARY"  --> "$ROUTER"("$nh")"
    printf "%s\n" $ROUTER
    printf "%4cMatching FIB entries:\n" " "
    fib_entries=$(lxc-attach -n $ROUTER -- ip route list match $DESTINATION_ADDRESS)
    get_next_hop=$(lxc-attach -n $ROUTER -- ip route get $DESTINATION_ADDRESS | sed '$ d')
    dc=$(awk '{print $1}' < <(echo $get_next_hop))
    if [ ! "$dc" == "local" ]; then
        sp=$(awk '{print $2}' < <(echo $get_next_hop))
        if [ $sp == "via" ]; then
            awk '{printf "%8c%s\t%s\t%s\n"," ",$1,$3,$5}' < <(echo $fib_entries)
            nh=$(awk '{print $3}' < <(echo $get_next_hop))
        else
            awk '{printf "%8c%s\t0.0.0.0\tdirectly connected\n"," ",$1}' < <(echo $fib_entries)
            nh="0.0.0.0"
        fi
    else
        awk '{printf "%8c%s\t0.0.0.0\tdirectly connected\n"," ",$1}' < <(echo $fib_entries)
        nh="0.0.0.0"
    fi
    #awk '{printf "%8c%s\t%s\t%s\n\n"," ",$1,$3,$5}'< <(echo $fib_entries)
    #nh=$(awk '{print $3}' < <(echo $get_next_hop))
    printf "%4cNext Hop: %s\n\n" " " $nh

    if [ "$nh" == "0.0.0.0" ]; then
        SUMMARY=$SUMMARY" --> "$DESTINATION_ADDRESS" (Destination Address)"
        if [ "$#" -eq 3 ]; then
            echo "*** PATH SUMMARY ***"
            echo $SUMMARY
            exit
        else
            echo $SUMMARY >/tmp/path.tmp
        fi
    fi

    if [ ! ${address_router_map[$nh]+o} ]; then
        #SUMMARY=$SUMMARY
        #echo "*** PATH SUMMARY ***"
        #echo $SUMMARY
        jump=true
    fi
done

if [ "$#" -eq 3 ]; then
    remote_cmd="lxc-ls -f | grep "$nh" | awk '{print \$1}'"
    router_name=$(sshpass -p "telematica" ssh -o StrictHostKeyChecking=no root@$3 $remote_cmd)
    remote_cmd="/root/tracepath_api "$router_name" "$2
    sshpass -p "telematica" ssh -o StrictHostKeyChecking=no root@$3 $remote_cmd
    remote_cmd="cat /tmp/path.tmp"
    remote_path=$(sshpass -p "telematica" ssh -o StrictHostKeyChecking=no root@$3 $remote_cmd)
    SUMMARY=$SUMMARY" --> "
    #echo "(R) "$remote_path
    regexp="s/^\("$router_name"\)/\1("$nh")/"
    remote=$(sed $regexp < <(echo "$remote_path"))
    SUMMARY=$SUMMARY$remote
    echo "*** PATH SUMMARY ***"
    echo $SUMMARY
    #sed 's/^\($router_name\)/\1(1.1.1.1)/' < <(echo "$remote_path")
fi
#sshpass -p "telematica" ssh -o StrictHostKeyChecking=no root@$3 '/root/tracepath_api R08 -- ip addr show'
